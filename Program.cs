using System;
using Output;
using Variables;
using Constants;
using TypeCasting;
using UserInput;
using Arithmetic;
using Maths;
using RandomNumber;
using HypothenuseCalculator;
using StringMethods;
using Ifs;
using Switches;
using LogicalOperators;
using While;
using For;
using NestedLoops;
using NumberGuessing;
using RockPaperScissors;
using Calculator;
using Arrays;
using ForEach;
using Methods;
using Return;
using MethodOverloading;
using Params;
using Exception;
using ConditionalOperator;
using StringInterpolation;
using MultidimensionalArrays;
using Classes;
using Objects;
using Constructors;
using Static;
using OverloadedConstructors;
using Inheritance;
using AbstractClasses;
using ArrayOfObjects;

class Program
{
    static void Main()
    {
        // OutputClass.Explore();
        // VariablesClass.Explore();
        // ConstantsClass.Explore();
        // TypeCastingClass.Explore();
        // UserInputClass.Explore();
        // ArithmeticClass.Explore();
        // MathClass.Explore();
        // RandomNumberClass.Explore();
        // HypothenuseCalculatorClass.Explore();
        // StringMethodsClass.Explore();
        // IfsClass.Explore();
        // SwitchesClass.Explore();
        // LogicalOperatorsClass.Explore();
        // WhileClass.Explore();
        // ForClass.Explore();
        // NestedLoopsClass.Explore();
        // NumberGuessingClass.Explore();
        // RockPaperScissorsClass.Explore();
        // CalculatorClass.Explore();
        // ArraysClass.Explore();
        // ForEachClass.Explore();
        // MethodsClass.Explore();
        // ReturnClass.Explore();
        // MethodOverloadingClass.Explore();
        // ParamsClass.Explore();
        // ExceptionClass.Explore();
        // ConditionalOperatorClass.Explore();
        // StringInterpolationClass.Explore();
        // MultidimensionalArraysClass.Explore();
        // ClassesClass.Explore();
        // ObjectsClass.Explore();
        // ConstructorsClass.Explore();
        // StaticClass.Explore();
        // OverloadedConstructorsClass.Explore();
        // InheritanceClass.Explore();
        // AbstractClassesClass.Explore();
        ArrayOfObjectsClass.Explore();
    }
}
